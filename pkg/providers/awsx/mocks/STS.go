// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	sts "github.com/aws/aws-sdk-go/service/sts"
	mock "github.com/stretchr/testify/mock"
)

// STS is an autogenerated mock type for the STS type
type STS struct {
	mock.Mock
}

// GetCallerIdentity provides a mock function with given fields: _a0
func (_m *STS) GetCallerIdentity(_a0 *sts.GetCallerIdentityInput) (*sts.GetCallerIdentityOutput, error) {
	ret := _m.Called(_a0)

	var r0 *sts.GetCallerIdentityOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(*sts.GetCallerIdentityInput) (*sts.GetCallerIdentityOutput, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(*sts.GetCallerIdentityInput) *sts.GetCallerIdentityOutput); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sts.GetCallerIdentityOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(*sts.GetCallerIdentityInput) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSTS interface {
	mock.TestingT
	Cleanup(func())
}

// NewSTS creates a new instance of STS. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSTS(t mockConstructorTestingTNewSTS) *STS {
	mock := &STS{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
