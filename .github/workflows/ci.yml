name: Continous Integration

on:
  push:
    branches:
      - main
      - develop
      - develop-*
      - v*-rc*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.16"
      - name: Checkout Code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Determine Build Information
        id: buildinfo
        run: |
          target=linux/amd64
          case $GITHUB_REF in
            *-arm64*) target=linux/arm64;;
          esac
          case $GITHUB_REF in
            refs/tags/*)  VERSION=${GITHUB_REF#refs/tags/};;
            refs/heads/*) VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')-${GITHUB_SHA::7};;
            refs/pull/*)  VERSION=pr-${{ github.event.number }}-${GITHUB_SHA::7};;
            *)            VERSION=sha-${GITHUB_SHA::7};;
          esac
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=target::${target}
          echo ::set-output name=commit_date::$(git show -s --format=%cI)
          echo ::set-output name=build_date::$(date +'%Y-%m-%dT%H:%M:%S')
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: build --snapshot --rm-dist --id ${{ steps.buildinfo.outputs.target }}
        env:
          GIT_REF: ${{ steps.extract_branch.outputs.branch }}
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: ${{ steps.buildinfo.outputs.target }}
          tags: ${{ secrets.DOCKER_REPO }}:${{ steps.buildinfo.outputs.version }}
